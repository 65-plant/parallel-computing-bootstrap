
================================================================================
FINAL PROJECT REPORT
Parallel Computing for Plant Phenotype Bootstrap Analysis
================================================================================

Author: Mitra Aftabi
Supervisor: Dr. Andreas Busjahn
Institution: CQ Beratung+Bildung GmbH - Berlin
Date: October 2025

================================================================================
EXECUTIVE SUMMARY
================================================================================

This project evaluated three parallel computing methods in R (furrr, future, 
parallel) for accelerating bootstrap confidence interval calculations in plant 
breeding data analysis.

KEY FINDINGS:
- Achieved up to 5.71x speedup using the future package
- Optimal performance with 5 genotypes and 5000 bootstrap replicates
- Different methods excel at different workload sizes
- Bootstrap replicates significantly impact speedup potential

BEST METHOD: future package for 3-10 tasks (2.85x average speedup)
EASIEST METHOD: furrr package for beginners (1.55x speedup)
NO DEPENDENCIES: parallel package built into R (3.27x speedup)

RECOMMENDATION: Use future for production, furrr for learning, parallel for 
HPC environments.

================================================================================
1. INTRODUCTION
================================================================================

1.1 Background

Plant breeding programs generate large phenotype datasets requiring 
computationally intensive statistical analyses. Bootstrap resampling is 
commonly used to estimate confidence intervals for breeding values and 
genetic parameters. However, bootstrap analyses can be time-consuming when 
analyzing hundreds of genotypes across multiple environments.

Modern computers have multiple CPU cores (4-16 cores are common), but 
traditional R code only uses one core. Parallel computing allows us to 
distribute independent bootstrap replicates across multiple cores, 
potentially achieving significant speedup.

1.2 Objectives

Primary objectives:
1. Compare three parallel computing approaches in R
2. Benchmark performance across different workload sizes
3. Identify optimal methods for different use cases
4. Create practical guidance for plant scientists

Secondary objectives:
5. Document package dependencies and requirements
6. Provide troubleshooting solutions
7. Create reproducible examples

1.3 Research Questions

1. How much speedup can parallel computing provide for bootstrap analyses?
2. Which parallel method is fastest for plant breeding applications?
3. How does performance scale with workload size?
4. When should researchers use which method?

================================================================================
2. MATERIALS AND METHODS
================================================================================

2.1 Dataset

Source: crossa.wheat from agridat R package
Reference: Crossa et al. (1990) Advances in Agronomy 44:55-85

Dataset characteristics:
- 450 observations
- 18 genotypes (G01-G18)
- 25 locations
- Yield measurements
- No missing data

Analysis task: Bootstrap confidence intervals for mean yield per genotype

2.2 Computational Environment

Hardware:
- CPU: 8 cores
- RAM: 16GB+
- Platform: Windows x64

Software:
- R version: 4.5.1
- Key packages: agridat, boot, furrr, future, future.apply, parallel

2.3 Analysis Methods

Bootstrap procedure:
1. For each genotype, resample data with replacement
2. Calculate mean yield for resampled data
3. Repeat 5000 times
4. Calculate 95% percentile confidence intervals

Four implementations tested:
1. Serial (baseline): Standard R for-loop
2. furrr: future_map() with multisession backend
3. future: future_lapply() with multisession backend
4. parallel: parLapply() with makeCluster()

Workers: 6 cores (leaving 2 for system)

2.4 Performance Metrics

Metrics collected:
- Execution time (wall-clock time in seconds)
- Speedup factor (serial time / parallel time)
- Efficiency (speedup / number of cores Ã— 100%)
- Scalability (performance across 3, 5, 10, 15 genotypes)

Benchmarking tools:
- tictoc package for timing
- bench package for detailed benchmarks
- System monitoring for resource usage

